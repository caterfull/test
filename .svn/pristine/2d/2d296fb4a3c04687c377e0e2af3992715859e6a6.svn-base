from django.http.response import HttpResponse, JsonResponse
from django.shortcuts import render_to_response
from django.template.context import RequestContext
from django.views.generic.base import View
from base.forms import ProposalEventForm
from base.model_invoice import Event
from base.models import Business


class EventCreate(View):

    def get(self, request, *args, **kwargs):
        user = request.user
        business = Business.objects.filter(owner=user).first()
        id = kwargs.get('id')
        if id:
            try:
                event = Event.objects.get_event_by(id)
            except:
                return HttpResponse(status=404)
            form = ProposalEventForm(instance=event, initial={'due_date':event.due_date,'business':business})
        else:
            form = ProposalEventForm(initial={'business':business})
        return render_to_response('base/invoice/event_add.html', RequestContext(request, {'form':form}))

    def post(self, request, *args, **kwargs):
        user = request.user
        business = Business.objects.filter(owner=user).first()
        form = ProposalEventForm(request.POST, initial={'business':business})
        errors = {}
        id = kwargs.get('id')
        event = None
        if id:
            try:
                event = Event.objects.get_event_by(id)
            except:
                return HttpResponse(status=404)
        if form.is_valid():
            response = Event.objects.create_or_update_event(form.cleaned_data, instance=event)
            if response in Event.objects.ERRORS:

               errors['server'] = 'Intente de nuevo'
               return render_to_response('base/invoice/event_add.html', RequestContext(request, {'form':form,'errors':errors}))
            return JsonResponse(status=200, data=response.id, safe=False)
        else:
            return render_to_response('base/invoice/event_add.html', RequestContext(request, {'form':form,'errors':errors}))